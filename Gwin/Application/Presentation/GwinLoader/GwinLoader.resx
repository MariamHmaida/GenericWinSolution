<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>